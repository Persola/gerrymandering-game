{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;AAAmC;;AAEnC,iEAAe;AACf;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA,EAAE,sDAAQ;AACV;AACA,GAAG;;AAEH;AACA,CAAC,EAAC;;;;;;;;;;;;;;;;;ACdgD;AAC8B;;AAEhF,iEAAe;AACf,mBAAmB,8DAAe;AAClC;AACA,IAAI,8EAA6B;AACjC;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;ACTF,iEAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM,OAAO;AACb;AACA;AACA;;AAEA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;AClBF,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;;ACNiE;;AAEnE;;AAEA,iEAAe;AACf;;AAEA;AACA;AACA,MAAM,uEAAuB;AAC7B,UAAU,uEAAuB;AACjC;AACA;AACA;AACA;;AAEA,yBAAyB;AACzB,CAAC,EAAC;;;;;;;;;;;;;;;ACjBF,iEAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;ACdF,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;AC1BD,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;ACbF,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,CAAC,EAAC;;;;;;;;;;;;;;;ACdF,iEAAe,sBAAsB,EAAC;;;;;;;;;;;;;;;;;;;;ACAkB;AACc;;AAEP;AACqC;AAC3C;;AAEzD,iEAAe;AACf;AACA,uBAAuB,iCAAiC;AACxD,iBAAiB,4EAAc;AAC/B;AACA;AACA;AACA;AACA,4BAA4B,oBAAoB,2BAA2B;AAC3E,4BAA4B,oBAAoB,2BAA2B;AAC3E,eAAe,gGAA+B;AAC9C,eAAe,yEAAW;AAC1B;AACA,OAAO,mEAAyB;AAChC;AACA,2BAA2B,8DAAgB;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;;;AC/BsD;;AAEC;;AAEzD,iEAAe;AACf;AACA;AACA;AACA;AACA,MAAM,8DAAgB;AACtB;AACA;AACA;AACA,MAAM,8DAAgB;AACtB;AACA;;AAEA,2BAA2B,yEAAW;AACtC,CAAC,EAAC;;;;;;;;;;;;;;;AClBF,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;AC5BF,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,WAAW;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;;AChCyD;;AAE3D,iEAAe;AACf;AACA;AACA,kBAAkB;AAClB;AACA;AACA,aAAa,8DAAgB,aAAa;AAC1C,aAAa,8DAAgB,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,kBAAkB;AAClB,6BAA6B,8DAAgB;AAC7C;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;ACtBF,iEAAe;AACf;AACA;AACA,0BAA0B,wBAAwB;AAClD;;AAEA;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;;;;ACVoD;AACa;AAC7B;;AAEtC;;AAEA,iEAAe;AACf;AACA;AACA,EAAE,qEAAW;AACb,EAAE,2EAAkB;AACpB,EAAE,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iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;ACXF,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;;ACtC0D;;AAE5D,iEAAe;AACf;AACA,eAAe,mEAAoB;AACnC,eAAe,mEAAoB;AACnC,eAAe,mEAAoB;AACnC,eAAe,mEAAoB;AACnC,eAAe,mEAAoB;AACnC,eAAe,mEAAoB;AACnC,eAAe,mEAAoB;AACnC,eAAe,mEAAoB;AACnC;AACA,CAAC,EAAC;;;;;;;;;;;;;;;;;ACbqE;AAClC;;AAErC,iEAAe;AACf;AACA;AACA;AACA;AACA,oCAAoC,yEAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB;AACnB,CAAC,EAAC;;;;;;;;;;;;;;;;;AChBqE;AAClC;;AAErC,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,yEAAyB;AAC7D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,uDAAS;AACxB,mBAAmB;AACnB,CAAC,EAAC;;;;;;;;;;;;;;;;;AChCmG;AACA;;AAErG,iEAAe;AACf;AACA;AACA;;AAEA;AACA;AACA,OAAO,yFAAuC;AAC9C,OAAO,yFAAuC;AAC9C;AACA,CAAC,EAAC;;;;;;;;;;;;;;;ACbF,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;;;ACT6C;AACsB;;AAErE,iEAAe;AACf;AACA,IAAI,iEAAS;AACb;AACA;AACA;AACA;AACA;AACA,EAAE,wEAAwB;AAC1B,CAAC,EAAC;;;;;;;;;;;;;;;;ACZmD;;AAErD,iEAAe;AACf;AACA;AACA,yCAAyC,OAAO;AAChD,MAAM,+DAAiB;AACvB;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;;;AC1ByD;;AAEN;;AAErD,iEAAe;AACf,kBAAkB,sEAAY;AAC9B;AACA,8BAA8B,MAAM;AACpC,MAAM,+DAAiB;AACvB;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;;AC5BuC;;AAEzC,iEAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,yDAAW;AACpC;AACA;;AAEA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;;ACfmF;;AAErF,iEAAe;AACf;AACA,8CAA8C,iBAAiB;AAC/D,gCAAgC,mFAAyB;AACzD;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,sCAAsC;AACtC,mCAAmC;AACnC,qCAAqC;AACrC;AACA,4CAA4C,iBAAiB,GAAG,iBAAiB;AACjF;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;ACtBF,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;;ACpB8D;;AAEhE,iEAAe;AACf,uCAAuC,0EAAiB;AACxD;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;;ACPuD;;AAEzD,iEAAe;AACf;AACA;AACA,qCAAqC,sEAAc;AACnD;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;;ACR8D;;AAEhE,iEAAe;AACf,oCAAoC,0EAAiB;AACrD;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;ACPF,iEAAe;AACf;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;ACHF,iEAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;ACbF,iEAAe;AACf;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;UCLF;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNkD;AACF;AACkB;AACX;AACF;AACL;;AAEhD;AACA;;AAEA,8BAA8B,0EAAmB,IAAI,+DAAQ,EAAE,gEAAS;AACxE,yBAAyB,oEAAc,IAAI,+DAAQ,EAAE,gEAAS;AAC9D,wBAAwB,mEAAa,IAAI,+DAAQ,EAAE,gEAAS;;AAE5D;AACA,EAAE,mEAAQ,IAAI,gEAAS,EAAE,+DAAQ;AACjC","sources":["webpack://lolla-gerrymandering-game/./src/count-logic/count-from-voters.js","webpack://lolla-gerrymandering-game/./src/count-logic/count-voters.js","webpack://lolla-gerrymandering-game/./src/count-logic/overall-count.js","webpack://lolla-gerrymandering-game/./src/count-logic/per-voter.js","webpack://lolla-gerrymandering-game/./src/count-logic/play-crunch-if-converted-district.js","webpack://lolla-gerrymandering-game/./src/count-logic/result-from-district-count.js","webpack://lolla-gerrymandering-game/./src/data/dist-id-to-color.js","webpack://lolla-gerrymandering-game/./src/data/initial-app-state.js","webpack://lolla-gerrymandering-game/./src/data/initial-map-config.js","webpack://lolla-gerrymandering-game/./src/data/voter-indicator-class.js","webpack://lolla-gerrymandering-game/./src/dynamic-styles/apply-dynamic-styles.js","webpack://lolla-gerrymandering-game/./src/dynamic-styles/set-cursor.js","webpack://lolla-gerrymandering-game/./src/dynamic-styles/style-renderers/button-style.js","webpack://lolla-gerrymandering-game/./src/dynamic-styles/style-renderers/cursor-style.js","webpack://lolla-gerrymandering-game/./src/dynamic-styles/style-renderers/district-styles.js","webpack://lolla-gerrymandering-game/./src/dynamic-styles/style-renderers/party-split-input-background-styles.js","webpack://lolla-gerrymandering-game/./src/events/assign-voter-to-district.js","webpack://lolla-gerrymandering-game/./src/events/create-on-change.js","webpack://lolla-gerrymandering-game/./src/events/create-on-click.js","webpack://lolla-gerrymandering-game/./src/events/create-on-pointer-move.js","webpack://lolla-gerrymandering-game/./src/events/restart-timer.js","webpack://lolla-gerrymandering-game/./src/events/update-assign-voter-indicator.js","webpack://lolla-gerrymandering-game/./src/generate-data/assign-initial-district-id.js","webpack://lolla-gerrymandering-game/./src/generate-data/generate-voters.js","webpack://lolla-gerrymandering-game/./src/generate-data/generate.js","webpack://lolla-gerrymandering-game/./src/map-logic/check-district-sizes.js","webpack://lolla-gerrymandering-game/./src/map-logic/coords-within-district.js","webpack://lolla-gerrymandering-game/./src/map-logic/count-gaps.js","webpack://lolla-gerrymandering-game/./src/map-logic/detect-neighbors-of-district.js","webpack://lolla-gerrymandering-game/./src/map-logic/replaced-district-would-be-locally-connected.js","webpack://lolla-gerrymandering-game/./src/map-logic/selected-district-would-be-locally-connected.js","webpack://lolla-gerrymandering-game/./src/map-logic/voter-is-assignable.js","webpack://lolla-gerrymandering-game/./src/render/clear-district-report.js","webpack://lolla-gerrymandering-game/./src/render/render.js","webpack://lolla-gerrymandering-game/./src/render/renderers/district-report.js","webpack://lolla-gerrymandering-game/./src/render/renderers/render-house-report.js","webpack://lolla-gerrymandering-game/./src/render/renderers/render-map.js","webpack://lolla-gerrymandering-game/./src/render/renderers/render-voter.js","webpack://lolla-gerrymandering-game/./src/render/renderers/winner-declaration.js","webpack://lolla-gerrymandering-game/./src/render/update-current-house-report.js","webpack://lolla-gerrymandering-game/./src/render/update-district-report.js","webpack://lolla-gerrymandering-game/./src/render/update-orig-house-report.js","webpack://lolla-gerrymandering-game/./src/util/extract-voter-id.js","webpack://lolla-gerrymandering-game/./src/util/shuffle.js","webpack://lolla-gerrymandering-game/./src/util/target-has-class.js","webpack://lolla-gerrymandering-game/webpack/bootstrap","webpack://lolla-gerrymandering-game/webpack/runtime/define property getters","webpack://lolla-gerrymandering-game/webpack/runtime/hasOwnProperty shorthand","webpack://lolla-gerrymandering-game/webpack/runtime/make namespace object","webpack://lolla-gerrymandering-game/./src/index.js"],"sourcesContent":["import perVoter from './per-voter';\n\nexport default (voters, numDistricts) => {\n  const counts = {};\n  for (let distId = 0; distId < numDistricts; distId++) {\n    counts[distId] = {};\n    counts[distId].party0 = 0;\n    counts[distId].party1 = 0;\n  }\n  perVoter(voters, (voter) => {\n    counts[voter.districtId][voter.partyAffiliation] += 1;\n  });\n\n  return counts;\n};\n","import countFromVoters from './count-from-voters';\nimport playCrunchIfConvertedDistrict from './play-crunch-if-converted-district';\n\nexport default (voterAssignment, appState, mapConfig) => {\n  const newCount = countFromVoters(appState.voters, mapConfig.numDistricts);\n  if (voterAssignment) {\n    playCrunchIfConvertedDistrict(appState.districtCounts, newCount);\n  }\n  appState.districtCounts = newCount;\n};\n","export default (distCounts) => {\n  const count = {\n    party0: 0,\n    party1: 0,\n    tied: 0\n  };\n\n  for (const dCount of Object.values(distCounts)) {\n    if (dCount.party0 > dCount.party1) {\n      count.party0 ++;\n    } else if (dCount.party0 < dCount.party1) {\n      count.party1 ++;\n    } else { // tie\n      count.tied ++;\n    }\n  }\n\n  return count;\n};\n","export default (voters, lambda) => {\n  for (const voterRow of voters) {\n    for (const voter of voterRow) {\n      lambda(voter);\n    }\n  }\n};\n","import resultFromDistrictCount from './result-from-district-count';\n\nconst crunchFoley = new Audio('./crunch.m4a');\n\nexport default (oldCount, newCount) => {\n  let districtChanged = false;\n\n  for (const distId of Object.keys(newCount)) {\n    if (\n      resultFromDistrictCount(oldCount[distId])\n      !== resultFromDistrictCount(newCount[distId])\n    ) {\n      districtChanged = true;\n    }\n  }\n\n  if (districtChanged) { crunchFoley.play(); };\n};\n","export default (districtCount) => {\n  if (districtCount.party0 > districtCount.party1) {\n    return 'party0';\n  }\n\n  if (districtCount.party0 < districtCount.party1) {\n    return 'party1';\n  }\n\n  if (districtCount.party0 !== districtCount.party1) {\n    throw error(\"what's up with this district count?\");\n  }\n\n  return 'tie';\n};\n","export default {\n  0: '00af91',\n  1: 'cc7351',\n  2: 'fa963d',\n  3: '8040b0',\n  4: 'd860b0',\n  5: 'e0b020',\n  6: '504090',\n  7: '966060',\n  8: '11698e',\n  9: '608040',\n  10: 'f6c065',\n  11: '8b6ea3',\n  12: 'eb596e',\n  13: '9dad7f',\n  14: 'e27802',\n  15: '51a2b5',\n  16: 'd6b0b1',\n  17: 'ec4646',\n  18: '007965',\n  19: '4d375d',\n  20: 'f1aa9b',\n  21: '557174',\n  22: '96cb7c',\n  23: '007981',\n  24: 'f8dc81'\n};","export default {\n  partyColors: [\n    \"#e48003\",\n    \"#a866a8\"\n  ],\n  selectedDistrictId: null,\n  hoveredDistrictId: null,\n  hoveringOnSlot: false,\n  invalidHeadcountDistrictIds: [],\n  buttonHighlighted: false,\n  voters: [],\n  origVoters: [],\n  districtCounts: {}\n};\n","export default {\n  percentParty0: 0.5,\n  numDistricts: 9,\n  votersPerDistrict: 25,\n  rootNumDistricts: function() {\n    return this.numDistricts**(1/2)\n  },\n  rootNumVotersPerDistrict: function() {\n    return this.votersPerDistrict**(1/2)\n  },\n  rootTotalVoters: function() {\n    return this.rootNumDistricts() * this.rootNumVotersPerDistrict()\n  },\n  timerInterval: setInterval(() => null, 100) // dummy to start\n};\n","export default 'assignVoterIndicator';\n","import DIST_ID_TO_COLOR from '../data/dist-id-to-color';\nimport assignVoterIndicatorClass from '../data/voter-indicator-class';\n\nimport districtStyles from './style-renderers/district-styles';\nimport partySplitInputBackgroundStyles from './style-renderers/party-split-input-background-styles';\nimport buttonStyle from './style-renderers/button-style';\n\nexport default ($, appState, mapConfig) => {\n  let styleText = '';\n  for (let distId = 0; distId < mapConfig.numDistricts; distId++) {\n    styleText += districtStyles(\n      distId,\n      appState.invalidHeadcountDistrictIds.includes(distId)\n    );\n  }\n  styleText += `\\n.party0 { background-color: ${appState.partyColors[0]}; }`;\n  styleText += `\\n.party1 { background-color: ${appState.partyColors[1]}; }`;\n  styleText += partySplitInputBackgroundStyles(appState);\n  styleText += buttonStyle(appState.buttonHighlighted);\n  styleText += `\n    .${assignVoterIndicatorClass} {\n      background-image: none;\n      background-color: #${DIST_ID_TO_COLOR[appState.selectedDistrictId]};\n    }\n  `;\n\n  const oldStyleEl = $('.dynamicStyleEl');\n  let newStyleEl = document.createElement('style');\n  newStyleEl.classList.add('dynamicStyleEl');\n  newStyleEl.innerHTML = styleText;\n  oldStyleEl.parentElement.replaceChild(newStyleEl, oldStyleEl);\n};\n","import DIST_ID_TO_COLOR from '../data/dist-id-to-color';\n\nimport cursorStyle from './style-renderers/cursor-style';\n\nexport default ($, appState) => {\n  const emptyColor = 'ffffff';\n  const mainColor = (\n    appState.selectedDistrictId === null\n    ? emptyColor\n    : DIST_ID_TO_COLOR[appState.selectedDistrictId]\n  );\n  const secondColor = (\n    appState.hoveringOnSlot && (appState.selectedDistrictId !== appState.hoveredDistrictId)\n    ? DIST_ID_TO_COLOR[appState.hoveredDistrictId]\n    : null\n  );\n\n  $('body').style.cursor = cursorStyle(mainColor, secondColor);\n};\n","export default (highlight) => {\n  if (highlight) {\n    return `\n      .regenerateButton {\n      \tbackground-color: #f0c911;\n        border: 2px solid #e54;\n      \tcolor: #b32;\n      }\n      .regenerateButton:hover {\n      \tbackground-color: #f4d415;\n        border: 2px solid #e54;\n        color: #c43;\n      }\n    `;\n  } else {\n    return `\n      .regenerateButton {\n      \tbackground-color: #ee8;\n      \tborder: 2px solid #995;\n      \tcolor: #b32;\n      }\n      .regenerateButton:hover {\n      \tbackground-color: #ff9;\n        border: 2px solid #aa6;\n        color: #c43;\n      }\n    `;\n  }\n};\n","export default (color, innerColor) => {\n  const first = (\n    `url(`\n      + `\"data:image/svg+xml,%3C`\n        + `svg%20xmlns='http://www.w3.org/2000/svg'%20`\n        + `height='54'%20`\n        + `width='36'`\n      + `%3E`\n      + `%3C`\n        + `polygon%20`\n        + `points='1,0%2026,32%201,44'%20`\n        + `fill='%23${color}'%20`\n        + `stroke='black'%20`\n        + `stroke-width='2'/`\n      + `%3E`\n  )\n  const optional = (\n      `%3C`\n        + `polygon%20`\n        + `points='1,30%2018,22%2026,32%201,44'%20`\n        + `fill='%23${innerColor}'%20`\n        + `stroke='black'%20`\n        + `stroke-width='2'/`\n      + `%3E`\n  )\n  const last = `%3C/svg%3E\") 0 0, default`;\n\n  if (innerColor !== null) {\n    return first + optional + last;\n  } else {\n    return first + last;\n  }\n};\n","import DIST_ID_TO_COLOR from '../../data/dist-id-to-color';\n\nexport default (districtId, invalidHeadcount) => {\n  if (invalidHeadcount) {\n    return `\n      .district-${districtId} {\n        background-image: repeating-linear-gradient(\n          -45deg,\n          #${DIST_ID_TO_COLOR[districtId]},\n          #${DIST_ID_TO_COLOR[districtId]} 18.675px,\n          #f00 18.675px,\n          #f00 21.25px\n        );\n      }\n    `;    \n  } else {\n    return `\n      .district-${districtId} {\n        background-color: #${DIST_ID_TO_COLOR[districtId]};\n      }\n    `;\n  }\n};\n","export default (appState) => {\n  return `\n    .controlLine>input[class=party0] {\n      background-color: ${appState.partyColors[0]}88;\n    }\n\n    .controlLine>input[class=party1] {\n      background-color: ${appState.partyColors[1]}88;\n    }\n  `;\n};\n","import countVoters from '../count-logic/count-voters';\nimport checkDistrictSizes from '../map-logic/check-district-sizes';\nimport render from '../render/render';\n\nconst clickFoley = new Audio('./click.mp3');\n\nexport default (voterId, districtId, appState, mapConfig, $) => {\n  clickFoley.play();\n  appState.voters[voterId[0]][voterId[1]].districtId = districtId;\n  countVoters(true, appState, mapConfig);\n  checkDistrictSizes($, appState, mapConfig);\n  render($, mapConfig, appState);\n};\n","import applyDynamicStyles from '../dynamic-styles/apply-dynamic-styles';\nimport targetHasClass from '../util/target-has-class';\n\nconst updatePartyColors = ($, appState, mapConfig, e) => {\n  appState.partyColors[0] = $('#party0color').value;\n  appState.partyColors[1] = $('#party1color').value;\n  applyDynamicStyles($, appState, mapConfig);\n};\n\nconst sigDigs = 8;\nconst factor = 10**sigDigs;\n\nconst oneMinus = (firstValue) => {\n  return (\n    factor\n    - factor * firstValue\n  ) / factor;\n};\n\nconst highlightButton = ($, appState, mapConfig) => {\n  appState.buttonHighlighted = true;\n  applyDynamicStyles($, appState, mapConfig);\n};\n\nexport default ($, appState, mapConfig) => {\n  return (e) => {\n    if (targetHasClass('partyColorPicker', e)) {\n      updatePartyColors($, appState, mapConfig, e);\n    } else if (e.target.id === 'percentParty0') {\n      highlightButton($, appState, mapConfig);\n      $('#percentParty1').value = oneMinus(Number($('#percentParty0').value));\n    } else if (e.target.id === 'percentParty1') {\n      highlightButton($, appState, mapConfig);\n      $('#percentParty0').value = oneMinus(Number($('#percentParty1').value));\n    } else if (['numDist', 'votersPerDist'].includes(e.target.id)) {\n      highlightButton($, appState, mapConfig);\n    }\n  }\n};\n","import applyDynamicStyles from '../dynamic-styles/apply-dynamic-styles';\nimport setCursor from '../dynamic-styles/set-cursor';\nimport generate from '../generate-data/generate';\nimport extractVoterId from '../util/extract-voter-id';\nimport render from '../render/render';\n\nimport targetHasClass from '../util/target-has-class';\nimport voterIsAssignable from '../map-logic/voter-is-assignable';\nimport assignVoterToDistrict from './assign-voter-to-district';\n\nconst selectDistrict = ($, appState, districtId) => {\n  appState.selectedDistrictId = districtId;\n  setCursor($, appState);\n};\n\nconst deselectDistrict = ($, appState) => {\n  appState.selectedDistrictId = null;\n  setCursor($, appState);\n};\n\nconst unhighlightButton = ($, appState, mapConfig) => {\n  appState.buttonHighlighted = false;\n  applyDynamicStyles($, appState, mapConfig);\n};\n\nexport default ($, appState, mapConfig) => {\n  return (e) => {\n    if (targetHasClass('voterAffiliation', e)) {\n      const clickedVoterId = extractVoterId(e.target.parentElement.getAttribute('data-voter-id'));\n      const replacedDistrictId = Number(e.target.parentElement.getAttribute('data-district-id'));\n      if (voterIsAssignable(clickedVoterId, appState.selectedDistrictId, replacedDistrictId, appState, mapConfig)) {\n        assignVoterToDistrict(clickedVoterId, appState.selectedDistrictId, appState, mapConfig, $);\n      }\n    } else if (targetHasClass('voterSlot', e)) {\n      selectDistrict($, appState, Number(e.target.getAttribute('data-district-id')));\n    } else if (targetHasClass('regenerateButton', e)) {\n      deselectDistrict($, appState);\n      generate($, mapConfig, appState);\n      unhighlightButton($, appState, mapConfig);\n    } else {\n      deselectDistrict($, appState);\n    }\n  \n    render($, mapConfig, appState);\n  };\n};\n","import setCursor from '../dynamic-styles/set-cursor';\nimport voterIsAssignable from '../map-logic/voter-is-assignable';\nimport updateDistrictReport from '../render/update-district-report';\nimport clearDistrictReport from '../render/clear-district-report';\nimport extractVoterId from '../util/extract-voter-id';\nimport targetHasClass from '../util/target-has-class';\n\nimport updateAssignVoterIndicator from './update-assign-voter-indicator';\n\nexport default ($, appState, mapConfig) => {\n  return (e) => {\n    if (targetHasClass('voterAffiliation', e)) {\n      updateDistrictReport(appState, e.target.parentNode, $);\n      updateAssignVoterIndicator(\n        $,\n        voterIsAssignable(\n          extractVoterId(e.target.parentElement.getAttribute('data-voter-id')),\n          appState.selectedDistrictId,\n          Number(e.target.parentElement.getAttribute('data-district-id')),\n          appState,\n          mapConfig\n        )\n        ? e.target.parentNode\n        : null,\n        appState,\n        mapConfig\n      );\n      appState.hoveringOnSlot = false;\n    } else if (targetHasClass('voterSlot', e)) {\n      updateDistrictReport(appState, e.target, $);\n      updateAssignVoterIndicator($, null, appState, mapConfig);\n      appState.hoveringOnSlot = true;\n    } else {\n      clearDistrictReport(appState, $);\n      updateAssignVoterIndicator($, null, appState, mapConfig);\n      appState.hoveringOnSlot = false;\n    }\n\n    setCursor($, appState);\n  };\n};\n\n","const updateTimer = ($, startTime) => {\n  const totalMilliseconds = Date.now() - startTime;\n  const seconds = Math.floor(totalMilliseconds/1000) % 60;\n  const minutes = Math.floor(totalMilliseconds/(1000 * 60));\n  const secondsString = String(seconds).padStart(2, 0);\n  const minutesString = String(minutes).padStart(2, 0);\n  $('#timer').innerText = `${minutesString}:${secondsString}`;\n};\n\nexport default ($, mapConfig) => {\n  const startTime = Date.now();\n  clearInterval(mapConfig.timerInterval);\n  mapConfig.timerInterval = setInterval(() => {\n    updateTimer($, startTime);\n  }, 1)\n};\n","import assignVoterIndicatorClass from '../data/voter-indicator-class';\nimport applyDynamicStyles from '../dynamic-styles/apply-dynamic-styles';\n\nexport default ($, hoveredSlot, appState, mapConfig) => {\n  const indicatedSlot = $(`.${assignVoterIndicatorClass}`);\n\n  if (indicatedSlot === hoveredSlot) {\n    return;\n  }\n\n  if (indicatedSlot !== null) {\n    indicatedSlot.classList.remove(assignVoterIndicatorClass);\n  }\n\n  if (hoveredSlot !== null) {\n    hoveredSlot.classList.add(assignVoterIndicatorClass);\n  }\n\n  applyDynamicStyles($, appState, mapConfig);\n};\n","export default (x, y, rootNumDistricts, rootNumVotersPerDistrict) => {\n  // assigns voters to their initial districts\n  for (let xDistCoord = 0; xDistCoord < rootNumDistricts; xDistCoord++) {\n    for (let yDistCoord = 0; yDistCoord < rootNumDistricts; yDistCoord++) {\n      if (\n        (x >= rootNumVotersPerDistrict * xDistCoord) &&\n        (x < rootNumVotersPerDistrict * (xDistCoord + 1)) &&\n        (y >= rootNumVotersPerDistrict * yDistCoord) &&\n        (y < rootNumVotersPerDistrict * (yDistCoord + 1))\n      ) {\n        return (xDistCoord * rootNumDistricts) + yDistCoord;\n      }\n    }\n  }\n  TypeError('voter coords have no corresponding district!?');\n};\n","import shuffle from '../util/shuffle';\n\nimport assignInitialDistrictId from './assign-initial-district-id';\n\nexport default (voters, mapConfig, rootTotalVoters, rootNumDistricts, rootNumVotersPerDistrict) => {\n  let totalVoters = rootTotalVoters**2;\n  let numParty0Voters = Math.floor(totalVoters * mapConfig.percentParty0);\n  let numParty1Voters = totalVoters - numParty0Voters;\n  let voterAffiliations = [];\n  for (let party0Ind = 0; party0Ind < numParty0Voters; party0Ind++) {\n    voterAffiliations.push('party0');\n  }\n  for (let party1Ind = 0; party1Ind < numParty1Voters; party1Ind++) {\n    voterAffiliations.push('party1');\n  }\n  voterAffiliations = shuffle(voterAffiliations);\n\n  voters.length = 0;\n\n  for (let mapYCoord = 0; mapYCoord < rootTotalVoters; mapYCoord++) {\n    voters[mapYCoord] = [];\n\n    for (let mapXCoord = 0; mapXCoord < rootTotalVoters; mapXCoord++) {\n      voters[mapYCoord][mapXCoord] = {\n        voterId: [mapYCoord, mapXCoord],\n        partyAffiliation: voterAffiliations.pop(),\n        districtId: assignInitialDistrictId(\n          mapYCoord,\n          mapXCoord,\n          rootNumDistricts,\n          rootNumVotersPerDistrict\n        )\n      };\n    }\n  }\n\n  return voters;\n};\n\n","import countVoters from '../count-logic/count-voters';\nimport DIST_ID_TO_COLOR from '../data/dist-id-to-color';\nimport setCursor from '../dynamic-styles/set-cursor';\nimport applyDynamicStyles from '../dynamic-styles/apply-dynamic-styles';\nimport restartTimer from '../events/restart-timer';\nimport checkDistrictSizes from '../map-logic/check-district-sizes';\nimport render from '../render/render';\nimport clearDistrictReport from '../render/clear-district-report';\nimport updateOrigHouseReport from '../render/update-orig-house-report';\n\nimport generateVoters from './generate-voters';\n\nconst updateMapConfigFromInputs = ($, mapConfig) => {\n  if (mapConfig.percentParty0 === undefined) {\n    mapConfig.percentParty0 = 0.5;\n  }\n\n  mapConfig.percentParty0 = Number($('#percentParty0').value);\n  mapConfig.numDistricts = Number($('#numDist').value);\n  mapConfig.votersPerDistrict = Number($('#votersPerDist').value);  \n};\n\nconst setOrigVoters = (appState) => {\n  appState.origVoters.length = 0;\n\n  appState.voters.forEach(voterCol => {\n    const col = [];\n\n    voterCol.forEach(voter => {\n      col.push(Object.assign({}, voter));\n    });\n\n    appState.origVoters.push(col);\n  });\n};\n\nexport default ($, mapConfig, appState) => {\n  updateMapConfigFromInputs($, mapConfig);\n  if (mapConfig.numDistricts > Object.keys(DIST_ID_TO_COLOR).length) {\n    throw('I need more colors (add to DIST_ID_TO_COLOR)');\n  }\n\n  generateVoters(\n    appState.voters,\n    mapConfig,\n    mapConfig.rootTotalVoters(),\n    mapConfig.rootNumDistricts(),\n    mapConfig.rootNumVotersPerDistrict()\n  );\n  countVoters(false, appState, mapConfig);\n  setOrigVoters(appState);\n  updateOrigHouseReport($, appState.origVoters, appState.districtCounts);\n  checkDistrictSizes($, appState, mapConfig);\n  applyDynamicStyles($, appState, mapConfig);\n  render($, mapConfig, appState);\n  setCursor($, appState);\n  clearDistrictReport(appState, $);\n  restartTimer($, mapConfig);\n};\n","import applyDynamicStyles from '../dynamic-styles/apply-dynamic-styles';\n\nexport default ($, appState, mapConfig) => {\n  appState.invalidHeadcountDistrictIds.length = 0;\n  for (let distId = 0; distId < mapConfig.numDistricts; distId++) {\n    const distTotal = appState.districtCounts[distId].party0 + appState.districtCounts[distId].party1;\n    if (Math.abs(mapConfig.votersPerDistrict - distTotal) > 1) {\n      appState.invalidHeadcountDistrictIds.push(distId);\n    }\n  }\n\n  applyDynamicStyles($, appState, mapConfig);\n};\n","export default (coords, districtId, voters, rootTotalVoters) => {\n  if (\n    coords[0] < 0 ||\n    coords[1] < 0 ||\n    coords[0] >= (rootTotalVoters) ||\n    coords[1] >= (rootTotalVoters)\n  ) {\n    return false; // out of bounds, not a voter\n  }\n\n  return voters[coords[0]][coords[1]].districtId === districtId;\n};\n","export default (neighborsOfDistrict) => {\n  /*\n    Only cells in the four basic directions count as adjacent. Diagonals are\n    only referenced in order to do this.\n  */\n  const directions = [\n    'downRight',\n    'right',\n    'upRight',\n    'up',\n    'upLeft',\n    'left',\n    'downLeft',\n    'down',\n  ];\n\n  let inSelectedDistrict = neighborsOfDistrict.down;\n  let gaps = 0;\n\n  for (const directionInd in directions) {\n    const direction = directions[directionInd];\n\n    if (inSelectedDistrict) {\n      if (!neighborsOfDistrict[direction]) {\n        inSelectedDistrict = false;\n        gaps ++;\n      }\n    } else {\n      if (\n        neighborsOfDistrict[direction] &&\n        ['down', 'right', 'up', 'left'].includes(direction)\n      ) {\n        inSelectedDistrict = true;\n      }\n    }\n  }\n\n  return gaps;\n};\n","import coordsWithinDistrict from './coords-within-district';\n\nexport default (centerVoterCoords, districtId, voters, rootTotalVoters) => {\n  return {\n    down:      coordsWithinDistrict([centerVoterCoords[0] + 1, centerVoterCoords[1]    ], districtId, voters, rootTotalVoters),\n    downRight: coordsWithinDistrict([centerVoterCoords[0] + 1, centerVoterCoords[1] + 1], districtId, voters, rootTotalVoters),\n    right:     coordsWithinDistrict([centerVoterCoords[0]    , centerVoterCoords[1] + 1], districtId, voters, rootTotalVoters),\n    upRight:   coordsWithinDistrict([centerVoterCoords[0] - 1, centerVoterCoords[1] + 1], districtId, voters, rootTotalVoters),\n    up:        coordsWithinDistrict([centerVoterCoords[0] - 1, centerVoterCoords[1]    ], districtId, voters, rootTotalVoters),\n    upLeft:    coordsWithinDistrict([centerVoterCoords[0] - 1, centerVoterCoords[1] - 1], districtId, voters, rootTotalVoters),\n    left:      coordsWithinDistrict([centerVoterCoords[0]    , centerVoterCoords[1] - 1], districtId, voters, rootTotalVoters),\n    downLeft:  coordsWithinDistrict([centerVoterCoords[0] + 1, centerVoterCoords[1] - 1], districtId, voters, rootTotalVoters)\n  };\n};\n","import detectNeighborsOfDistrict from './detect-neighbors-of-district';\nimport countGaps from './count-gaps';\n\nexport default (clickedVoterId, replacedDistrictId, appState, mapConfig) => {\n  /*\n    Allow or disallow removal of voters from districts such that across many\n    removals the replaced district will never be broken into separate pieces.\n  */\n  const replacedDistrictNeighbors = detectNeighborsOfDistrict(\n    clickedVoterId,\n    replacedDistrictId,\n    appState.voters,\n    mapConfig.rootTotalVoters()\n  );\n  const gaps = countGaps(replacedDistrictNeighbors);\n  return gaps < 2; // multiple gaps severs a district\n};\n","import detectNeighborsOfDistrict from './detect-neighbors-of-district';\nimport countGaps from './count-gaps';\n\nexport default (clickedVoterId, selectedDistrictId, appState, mapConfig) => {\n  /*\n    Allow or disallow assignment of individual voters to districts such that\n    across many assignments (1) districts never contain holes (voters of other\n    districts inside them) and (2) districts are never broken into unconnected\n    pieces.\n  */\n  const selectedDistrictNeighbors = detectNeighborsOfDistrict(\n    clickedVoterId,\n    selectedDistrictId,\n    appState.voters,\n    mapConfig.rootTotalVoters()\n  );\n\n  if ([\n    selectedDistrictNeighbors.down,\n    selectedDistrictNeighbors.right,\n    selectedDistrictNeighbors.up,\n    selectedDistrictNeighbors.left\n  ].filter(Boolean).length === 0) {\n    /*\n      Clicked voter has no directly adjacent neighbors belonging to the selected\n      district, so it would be isolated\n    */\n    return false;\n  }\n\n  const gaps = countGaps(selectedDistrictNeighbors);\n  return gaps < 2; // multiple gaps creates a hole\n};\n","import selectedDistrictWouldBeLocallyConnected from './selected-district-would-be-locally-connected';\nimport replacedDistrictWouldBeLocallyConnected from './replaced-district-would-be-locally-connected';\n\nexport default (voterId, selectedDistrictId, voterOldDistrictId, appState, mapConfig) => {\n  if (voterOldDistrictId === selectedDistrictId) {\n    return false;\n  }\n\n  return (\n    typeof selectedDistrictId === 'number' // a district is selected\n    && selectedDistrictWouldBeLocallyConnected(voterId, selectedDistrictId, appState, mapConfig)\n    && replacedDistrictWouldBeLocallyConnected(voterId, voterOldDistrictId, appState, mapConfig)\n  )\n};\n","export default (appState, $) => {\n  appState.hoveredDistrictId = null;\n  $('.districtReport').innerHTML = `\n    <div class=\"hoverHeadsUp\">\n      Hover over a district\n      <br />\n      to see its vote count\n    </div>\n  `;\n};\n","import renderMap from './renderers/render-map';\nimport updateCurrentHouseReport from './update-current-house-report';\n\nexport default ($, mapConfig, appState) => {\n  $('#mapWrapper').replaceChild(\n    renderMap(\n      appState.voters,\n      mapConfig.rootTotalVoters()\n    ),\n    $('#map')\n  );\n  updateCurrentHouseReport($, appState.districtCounts);\n};\n","import winnerDeclaration from './winner-declaration';\n\nexport default (distId, districtCounts) => {\n  const districtCount = districtCounts[distId];\n  return `\n    <div class=\"districtTitle district-${distId}\">DISTRICT</div>\n    ${winnerDeclaration(districtCount)}\n    <div class=\"partyControlReport\">\n      <div class=\"partyDistrictCount party0\">\n        ${districtCount.party0}\n      </div>\n      voters\n    </div>\n    <div class=\"partyControlReport\">\n      <div class=\"partyDistrictCount\">\n        ${districtCount.party0 + districtCount.party1}\n      </div>\n      total\n    </div>\n    <div class=\"partyControlReport\">\n      <div class=\"partyDistrictCount party1\">\n        ${districtCount.party1}\n      </div>\n      voters\n    </div>\n  `\n};\n","import overallCount from '../../count-logic/overall-count';\n\nimport winnerDeclaration from './winner-declaration';\n\nexport default (title, districtCounts) => {\n  const results = overallCount(districtCounts);\n  return `\n    <div class=\"houseTitle\">${title}</div>\n    ${winnerDeclaration(results)}\n    <div class=\"partyControlReport\">\n      <div class=\"partyDistrictCount party0\">\n        ${results.party0}\n      </div>\n      districts\n    </div>\n    <div class=\"partyControlReport\">\n      <div class=\"partyDistrictCount\">\n        ${results.tied}\n      </div>\n      tied\n    </div>\n    <div class=\"partyControlReport\">\n      <div class=\"partyDistrictCount party1\">\n        ${results.party1}\n        </div>\n        districts\n    </div>\n  `\n};\n","import renderVoter from './render-voter';\n\nexport default (voters, rootTotalVoters) => {\n  const mapDom = document.createElement('div');\n  mapDom.id = 'map';\n  mapDom.style['grid-template-rows'] = '60px '.repeat(rootTotalVoters);\n  mapDom.style['grid-template-columns'] = '60px '.repeat(rootTotalVoters);\n\n  for (const voterRow of voters) {\n    for (const voter of voterRow) {\n      mapDom.appendChild(renderVoter(voter, voters, rootTotalVoters));\n    }\n  }\n\n  return mapDom;\n};\n","import detectNeighborsOfDistrict from '../../map-logic/detect-neighbors-of-district';\n\nexport default (voter, voters, rootTotalVoters) => {\n  const voterDOM = document.createElement('div');\n  const classList = ['voterSlot', `district-${voter.districtId}`];\n  const sameDistrictNeighbors = detectNeighborsOfDistrict(\n    voter.voterId,\n    voter.districtId,\n    voters,\n    rootTotalVoters\n  );\n  if (!sameDistrictNeighbors.down) { classList.push('district-border-bottom') }\n  if (!sameDistrictNeighbors.right) { classList.push('district-border-right') }\n  if (!sameDistrictNeighbors.up) { classList.push('district-border-top') }\n  if (!sameDistrictNeighbors.left) { classList.push('district-border-left') }\n  voterDOM.classList.add(...classList);\n  voterDOM.setAttribute('data-voter-id', `${voter.voterId[0]}-${voter.voterId[1]}`);\n  voterDOM.setAttribute('data-district-id', voter.districtId);\n  const voterAffilEl = document.createElement('div');\n  voterAffilEl.classList.add('voterAffiliation', voter.partyAffiliation);\n  voterDOM.appendChild(voterAffilEl);\n  return voterDOM;\n};\n","export default (results) => {\n  if (results.party0 > results.party1) {\n    return `\n      <div class=\"winnerDeclaration winnerDeclarationLeft\">\n        MAJORITY\n      </div>\n    `;\n  } else if (results.party0 < results.party1) {\n    return `\n      <div class=\"winnerDeclaration winnerDeclarationRight\">\n        MAJORITY\n      </div>\n    `;\n  } else {\n    return `\n      <div class=\"winnerDeclaration winnerDeclarationTie\">\n        tie!\n      </div>\n    `;\n  }\n};\n","import renderHouseReport from './renderers/render-house-report';\n\nexport default ($, districtCounts) => {\n  $('.currentHouseReport').innerHTML = renderHouseReport(\n    'Gerrymandered Districts',\n    districtCounts\n  );\n};\n","import districtReport from './renderers/district-report';\n\nexport default (appState, voter, $) => {\n  const thisMoveHoveredDistrictId = Number(voter.className.match(/district\\-(\\d+)/)[1]);\n  if (appState.hoveredDistrictId !== thisMoveHoveredDistrictId) {\n    $('.districtReport').innerHTML = districtReport(thisMoveHoveredDistrictId, appState.districtCounts);\n    appState.hoveredDistrictId = thisMoveHoveredDistrictId;\n  }\n};\n","import renderHouseReport from './renderers/render-house-report';\n\nexport default ($, origVoters, districtCounts) => {\n  $('.origHouseReport').innerHTML = renderHouseReport(\n    'State - Original Districts',\n    districtCounts\n  );\n};\n","export default idString => {\n  const match = idString.match(/(\\d+)\\-(\\d+)/);\n  return [Number(match[1]), Number(match[2])];\n};\n","export default (array) => {\n  let swapSlot;\n  let currentIndex = array.length - 1;\n\n  while (currentIndex !== 0) {\n    const randomLowerIndex = Math.floor(Math.random() * currentIndex);\n    swapSlot = array[currentIndex];\n    array[currentIndex] = array[randomLowerIndex];\n    array[randomLowerIndex] = swapSlot;\n    currentIndex -= 1;\n  }\n\n  return array;\n};\n","export default (className, evnt) => {\n  return (\n    evnt.target.className &&\n    evnt.target.className.split(' ').includes(className)\n  )\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import mapConfig from './data/initial-map-config';\nimport appState from './data/initial-app-state';\nimport createOnPointerMove from './events/create-on-pointer-move';\nimport createOnChange from './events/create-on-change';\nimport createOnClick from './events/create-on-click';\nimport generate from './generate-data/generate';\n\nconst $ = document.querySelector.bind(document);\nconst $$ = document.querySelectorAll.bind(document);\n\ndocument.body.onpointermove = createOnPointerMove($, appState, mapConfig);\ndocument.body.onchange = createOnChange($, appState, mapConfig);\ndocument.body.onclick = createOnClick($, appState, mapConfig);\n\nwindow.onload = (e) => {\n  generate($, mapConfig, appState);\n};\n"],"names":[],"sourceRoot":""}